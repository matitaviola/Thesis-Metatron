*Slide 1: Introduction*

Good [morning/afternoon], everyone. My name is Mattia Oliva, and I am here to present my thesis, which focuses on defining a library for an automotive ECU API layer using a Model-Based approach. I would like to thank my advisor, Prof. Massimo Violante, and my internship tutor, Ing. Emilio Bertrand, for their guidance throughout this journey.

*Slide 2: Collaboration with Metatron*

This thesis was made possible through collaboration with Metatron S.p.A., a company within the Landi Renzo Group that specializes in developing electronic and mechanical components for alternative fuels. My work was conducted at the Metatron Research Center in Volvera, Turin, where I gained valuable insights into the automotive industry.

*Slide 3: Current Situation*

Over the years, Metatron has developed a complex code base in response to evolving standards and customer demands. However, this complexity has led to challenges in managing the code effectively. Our goal was to create a standardized and flexible API layer that would simplify development, enhance portability, and ensure compliance with diagnostic standards across various markets.

*Slide 4: Thesis Goals*

To address these challenges, my thesis had several key goals. First, I analyzed the current ECU API layer and existing Model-Based Software Libraries (MBSL). I then defined and implemented Model-Based libraries, focusing on memory management functions and diagnostic protocols. Additionally, I developed a Demo Application Layer to validate these libraries.

*Slide 5: Architecture*

At the core of this project is a robust memory management strategy. We designed it to be general-purpose, ensuring flexibility as we navigated the complexities of the On-Board Diagnostic (OBD) system. By utilizing the NVRAM modules of the HDS9 board, we ensured data redundancy and reliability.

*Slide 6: NVRAM Management - HIL Testing*

To validate our memory management system, we conducted Hardware-in-the-Loop (HIL) testing. Two automated tests were implemented using LabVIEW, focusing on the system's resilience under stress and the flexibility of our memorization strategy. Communication between the board and the test program was established via the CAN protocol.

*Slide 7: NVRAM Management - Results*

The results of our tests were promising. The second test ran for over four days, simulating 6000 ignition cycles and collecting more than 30,000 samples. We observed the expected behavior, confirming the integrity of the data stored in memory. The first test also demonstrated correct data retrieval and module selection.

*Slide 8: Diagnostic System Overview*

Moving on to the diagnostic system, we updated the diagnosis flow to adopt a modular approach. The automaton, named ADIA, plays a crucial role in validating error conditions and managing the error memory. We simplified the original code, condensing multiple types of ADIA into a standard-compliant Finite State Machine (FSM).

*Slide 9: Diagnostic Requirements*

For each fault defined in the system, the diagnosis flow has been meticulously updated. The ADIA automaton cycles through its states to validate error conditions, ensuring efficient management of the error memory and recovery strategies. This modular approach enhances maintainability and ease of use for future customers.

*Slide 10: Error Memory & Freeze Frame*

The Error Memory and Freeze Frame are vital components for managing the Malfunction Indicator Lamp (MIL) and adhering to diagnostic protocols. We focused on minimizing the data stored in non-volatile memory while ensuring that essential information is retained for effective diagnostics.

*Slide 11: Interfaces*

To facilitate model-based design, we created APIs that are now available as SIMULINK blocks in the companyâ€™s library. Additionally, we developed user-friendly SIMULINK masks to simplify the setup process for the OBD strategy.

*Slide 12: Work Recap*

In summary, my work can be divided into two parts. First, I analyzed pre-existing code and implemented a new strategy, including HIL testing. Second, I defined the new OBD strategy and developed its components, ensuring compliance with state-of-the-art standards.

*Slide 13: Conclusion & Next Steps*

In conclusion, we have successfully simplified the system architecture, increased modularity, and ensured compliance with OBD standards. Moving forward, we aim to integrate protocols with the Basic Software Level and identify a pilot project to fully test the system in a real-world environment.

*Slide 14: Thank You*

Thank you for your attention. I am happy to answer any questions you may have.

